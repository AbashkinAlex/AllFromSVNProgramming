/**
 * Created by Alexandr Abashkin on 3/14/2016.
 */

import java.io.*;
import java.util.ArrayList;
import java.util.List;

/**
 * Практическое занятие 2
 * <p>
 * Регулярные выражения. Обработка строк.
 * <p>
 * Используя регулярные выражения создать программу для парсинга
 * <p>
 * (синтаксического анализа) текстовой информации из HTML документа.
 * <p>
 * Программа должна считывать текст из файла, находить необходимые
 * <p>
 * данные, создавать соответсвующий объект класса описывающего структуру
 * <p>
 * данных и добавлять эти объекты в ArrayList. Вывести все значения в консоль.
 * <p>
 * 1. Облегченный вариант задания.
 * <p>
 * Ежегодно на сайте Social Security Online составляют на основании
 * <p>
 * статистических данных рейтинг самых популярных мужских и женских
 * <p>
 * имен, которыми родители называют своих детей в США. Данные рейтинга за
 * <p>
 * 2008 год представленны в виде таблицы и находятся в файле baby2008.html.
 * <p>
 * Необходимо изучить структуру HTML документа и составить
 * <p>
 * регулярное выражение для парсинга данных рейтинга.
 * <p>
 * Создать класс, описывающий позицию рейтинга и класс описывающий
 * <p>
 * парсер, в котором будет метод обработки html документа.
 * <p>
 * 2. Усложненный вариант задания.
 * <p>
 * Есть файл с прайс-листом ноутбуков. Изучить структуру HTML
 * <p>
 * документа и составить регулярное выражение для парсинга данных об
 * <p>
 * асортименте продаваемых ноутбуков (название модели, описание, цена и
 * <p>
 * Создать класс, описывающий ноутбук и класс для парсера, в котором
 * <p>
 * будет метод обработки html документа.
 */

public class App {
    public static void main(String[] args) throws IOException {
        String baby = "src/main/resources/baby2008.html";
        String notebooks = "src/main/resources/source.html";
        List <Notebook> notebookList = Parser.parcerForNoteBook(Parser.readFile(notebooks));
        for (Notebook notebook : notebookList) {
            System.out.println(notebook);
        }
        List<Baby>babies = Parser.parcerForBaby(Parser.readFile(baby));
        for (Baby baby1 : babies) {
            System.out.println(baby1);
        }
    }
}
